prompt-proto-service:

  podAnnotations:
    # HACK: disable autoscaling as workaround for DM-41829
    autoscaling.knative.dev/min-scale: "200"
    # see values.yaml for calculation of max-scale
    autoscaling.knative.dev/max-scale: "200"
    # Update this field if using latest or static image tag in dev
    revision: "1"

  # HACK: disable autoscaling as workaround for DM-41829
  worker:
    restart: 15

  image:
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 4.10.0

  instrument:
    pipelines:
      # IMPORTANT: don't use flow-style mappings (i.e., {}) in pipelines specs
      # if the result (including any comments) is longer than 72 characters.
      # The config will get corrupted after template substitution.
      # Block-style mappings can have lines of any length.
      main: |-
        - survey: BLOCK-320  # Science Validation
          pipelines:
          - ${PROMPT_PROCESSING_DIR}/pipelines/LSSTComCam/ApPipe.yaml
          - ${PROMPT_PROCESSING_DIR}/pipelines/LSSTComCam/SingleFrame.yaml
          - ${PROMPT_PROCESSING_DIR}/pipelines/LSSTComCam/Isr.yaml
        - survey: BLOCK-T246  # instrument checkout
          pipelines: ['${PROMPT_PROCESSING_DIR}/pipelines/LSSTComCam/Isr-cal.yaml']
        # Manual observations during SV blocks
        - survey: BLOCK-T306
          pipelines: []
        - survey: BLOCK-T307
          pipelines: []
        - survey: BLOCK-T308
          pipelines: []
        - survey: BLOCK-T309
          pipelines: []
        - survey: BLOCK-T310
          pipelines: []
        - survey: BLOCK-T311
          pipelines: []
        - survey: BLOCK-T312
          pipelines: []
        # Miscellaneous scripts, not always images
        - {survey: "", pipelines: []}
        # Ignore anything else
        - {pipelines: []}
      preprocessing: |-
        - survey: BLOCK-320
          pipelines: ['${PROMPT_PROCESSING_DIR}/pipelines/LSSTComCam/Preprocessing.yaml']
        - {survey: "", pipelines: []}
        # No preprocessing for anything else
        - {pipelines: []}
    calibRepo: s3://rubin-summit-users

  s3:
    imageBucket: rubin-summit
    endpointUrl: https://sdfembs3.sdf.slac.stanford.edu

  raw_microservice: http://172.24.5.158:8080/presence

  imageNotifications:
    kafkaClusterAddress: prompt-processing-2-kafka-bootstrap.kafka:9092
    topic: rubin-summit-notification
    # Scheduler adds an extra 60-80-second delay for first visit in a sequence,
    # and files can take up to 20 seconds to arrive. Scheduler delay associated
    # with CWFS engineering data, should not apply to other cameras.
    imageTimeout: 110

  apdb:
    config: s3://rubin-summit-users/apdb_config/cassandra/pp_apdb_lsstcomcam.py

  alerts:
    topic: "lsstcomcam-alerts"

  sasquatch:
    endpointUrl: https://usdf-rsp-dev.slac.stanford.edu/sasquatch-rest-proxy
    namespace: lsst.prompt.prod
    auth_env: false

  logLevel: timer.lsst.activator=DEBUG lsst.diaPipe=VERBOSE lsst.rbClassify=VERBOSE lsst.resources=DEBUG

  fullnameOverride: "prompt-proto-service-lsstcomcam"
